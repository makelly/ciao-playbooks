---
# Configure ciao base services

- name: Deploy ansible docker issues workaround
  hosts: all
  sudo: True
  tasks:
    - name: Install python pip
      apt: name=python-pip state=present update_cache=yes cache_valid_time=3600
    - name: Install docker-py as a workaround for Ansible issue
      pip: name=docker-py version=1.2.3 state=present

- name: Deploy etcd cluster
  hosts: etcd
  sudo: True
  vars:
    etcd_cluster: "{% for host in groups.etcd %}etcd-{{ hostvars[host].inventory_hostname }}=http://{{ hostvars[host].ansible_default_ipv4.address }}:2380{% if not loop.last %},{% endif %}{% endfor %}"
  tasks:
    - name: Install etcd
      docker:
        name: ciao-etcd
        image: quay.io/coreos/etcd:v2.0.8
        state: started
        restart_policy: always
        ports:
        - "4001:4001"
        - "2380:2380"
        - "2379:2379"
        env:
          ETCD_NAME: etcd-{{ inventory_hostname }}
          ETCD_INITIAL_ADVERTISE_PEER_URLS: http://{{ ansible_default_ipv4.address }}:2380
          ETCD_ADVERTISE_CLIENT_URLS: http://{{ ansible_default_ipv4.address }}:2379,http://{{ ansible_default_ipv4.address }}:4001
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379,http://0.0.0.0:4001
          ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
          ETCD_INITIAL_CLUSTER_TOKEN: etcd-cluster-ciao
          ETCD_INITIAL_CLUSTER: "{{ etcd_cluster }}"
          ETCD_INITIAL_CLUSTER_STATE: new 

- name: Deploy ZooKeeper cluster
  hosts: zookeeper
  sudo: True
  vars:
    zoo_config_directory: "/opt/ciao_zookeeper/conf"
    zoo_data_directory: "/var/lib/ciao_zookeeper"
  tasks:
    - name: Create ZooKeeper configuration directory
      file: path={{ zoo_config_directory }} state=directory
    - name: Create ZooKeeper data directory
      file: path={{ zoo_data_directory }} state=directory
    - name: Install configuration file
      template: src=templates/zoo.cfg.j2 dest={{ zoo_config_directory }}/zoo.cfg
    - name: Install logging configuration file
      template: src=templates/zoo.log4j.properties.j2 dest={{ zoo_config_directory }}/log4j.properties
    - name: Install myid file
      template: src=templates/myid.j2 dest={{ zoo_data_directory }}/myid
    - name: Install ZooKeeper
      docker:
        name: ciao-zookeeper
        image: jplock/zookeeper
        state: started
        restart_policy: always
        ports:
        - "2181:2181"
        - "2888:2888"
        - "3888:3888"
        volumes:
        - "{{ zoo_config_directory }}:/opt/zookeeper/conf"
        - "{{ zoo_data_directory }}:/tmp/zookeeper"

- name: Deploy ActiveMQ cluster
  hosts: activemq
  sudo: True
  vars:
    activemq_config_directory: "/opt/ciao_activemq/conf"
  tasks:
    - name: Create ActiveMQ configuration directory
      file: path={{ activemq_config_directory }} state=directory
    - name: Install configuration file
      template: src=templates/activemq.xml.j2 dest={{ activemq_config_directory }}/activemq.xml
    - name: Install ActiveMQ
      docker:
        name: ciao-activemq
        image: webcenter/activemq
        state: started
        restart_policy: always
        ports:
        - "8161:8161"
        - "61616:61616"
        - "61614:61614"
        volumes:
        - "{{ activemq_config_directory }}:/opt/activemq/conf"

- name: Deploy Hawtio
  hosts: hawtio
  sudo: True
  tasks:
    - name: Install hawtio
      docker:
        name: ciao-hawtio
        image: fabric8/fabric8-console
        state: started
        restart_policy: always
        ports:
        - "9090:9090"

- name: Deploy Kibana
  hosts: kibana
  sudo: True
  tasks:
    - name: Install Kibana
      docker:
        name: ciao-kibana
        image: kibana
        state: started
        restart_policy: always
        ports:
        - "5601:5601"